<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xywg.equipmentmonitor.modular.remotesetting.dao.ProjectDeviceUpgradePackageMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.xywg.equipmentmonitor.modular.remotesetting.model.ProjectDeviceUpgradePackage">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="version" property="version" />
        <result column="path" property="path" />
        <result column="type" property="type" />
        <result column="comments" property="comments" />
    	<result column="is_del" property="isDel" />
    	<result column="create_time" property="createTime" />
    	<result column="create_user" property="createUser" />
    	<result column="modify_time" property="modifyTime" />
    	<result column="modify_user" property="modifyUser" />
    </resultMap>

    <resultMap id="myBaseResultMap" type="com.xywg.equipmentmonitor.modular.remotesetting.vo.ProjectDeviceUpgradePackageVO">
        <result column="createUserName" property="createUserName" />
        <result column="typeName" property="typeName" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id,
        name,
        version,
        path,
        comments,
        is_del,
        type,
        create_time,
        create_user,
        modify_time,
        modify_user,
    </sql>

    <!-- 通用查询结果列(带别名)-->
    <sql id="Column_List_With_Alias">
        ${alias}.id AS ${alias}_id,
        ${alias}.name AS ${alias}_name,
        ${alias}.version AS ${alias}_version,
        ${alias}.path AS ${alias}_path,
        ${alias}.comments AS ${alias}_comments,
        ${alias}.is_del AS ${alias}_is_del,
        ${alias}.create_time AS ${alias}_create_time,
        ${alias}.create_user AS ${alias}_create_user,
        ${alias}.modify_time AS ${alias}_modify_time,
        ${alias}.modify_user AS ${alias}_modify_user,
    </sql>

    <!-- 通用查询结果列(带别名)-->
    <sql id="Column_List">
        ${alias}.id,
        ${alias}.name,
        ${alias}.version,
        ${alias}.path,
        ${alias}.comments,
        ${alias}.is_del,
        ${alias}.type,
        ${alias}.create_time,
        ${alias}.create_user,
        ${alias}.modify_time,
        ${alias}.modify_user,
    </sql>

    <select id="getPageList" resultType="com.xywg.equipmentmonitor.modular.remotesetting.vo.ProjectDeviceUpgradePackageVO">
        select
        a.id,
        a.name,
        a.version,
        a.path,
        a.comments,
        a.is_del as isDel,
        a.type,
        date_format(a.create_time,'%Y-%m-%d %H:%i:%S') as createTime,
        a.create_user AS createUser,
        a.modify_time AS modifyTime,
        a.modify_user AS modifyUser,
        b.name as createUserName,
        c.name as typeName
        from t_project_device_upgrade_package a
        left join t_sys_user b on a.create_user=b.id and b.is_del=0
        left join t_project_master_device_type c on c.id=a.type  and c.is_del=0
        <where>
            ${ew.sqlSegment}
        </where>
        order by a.id desc
    </select>


    <select id="getDeviceList" resultType="com.xywg.equipmentmonitor.modular.remotesetting.model.ProjectDeviceUpgrade">
        select
          a.id,
          a.device_no as deviceNo,
          a.firmware_version as firmwareVersion,
          a.upgrade_time as upgradeTime,
          b.id as projectId,
          b.`name` as projectName,
          c.version as version,
          c.upgrade_time as  commandUpgradeTime,
          c.path as path
        from ${mainTableName} a
        left join t_project_info  b  on  a.project_id =b.id and b.is_del=0
        left join ${subtablesName} c  on a.device_no =c.device_no and c.is_del=0  and c.id in(select max(id)
            from  ${subtablesName}  where  is_del=0 GROUP BY device_no )
        where a.is_del=0
        <if test="keyWord!=null  and  keyWord!='' ">
         and  (a.device_no like CONCAT('%',#{keyWord},'%') or  b.`name` like CONCAT('%',#{keyWord},'%'))
        </if>
    </select>

    <select id="getDeviceListNoPage" resultType="com.xywg.equipmentmonitor.modular.remotesetting.model.ProjectDeviceUpgrade">
        select
          a.id,
          a.device_no as deviceNo,
          b.id as projectId,
          b.`name` as projectName,
          c.version as version,
          c.path as path,
          c.upgrade_time as upgradeTime
        from ${mainTableName} a
        left join t_project_info  b  on  a.project_id =b.id and b.is_del=0
        left join ${subtablesName} c  on a.device_no =c.device_no and c.is_del=0  and c.id in(select max(id)
            from  ${subtablesName}  where  is_del=0 GROUP BY device_no )
        where a.is_del=0
        <if test="ids!=null and ids.length>0">
            and  a.id in(
            <foreach collection="ids" separator="," open="" close="" item="item" index="index">
                  #{item}
            </foreach>
            )
        </if>
    </select>

    <insert id="insertUpgradeRecord">
        insert into ${subtablesName} (
          device_no,
          project_id,
          version,
          path,
          upgrade_time,
          flag,
          is_del,
          create_time,
          create_user
        )values
        <foreach collection="list" index="index" item="item"  separator="," open="" close="">
            ( #{item.deviceNo},
            #{item.projectId},
            #{item.version},
            #{item.path},
            now(),
            #{item.flag},
            0,
            now(),
            #{item.createUser})
        </foreach>
    </insert>
</mapper>
