<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xingyun.equipment.crane.modular.device.dao.ProjectHelmetMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.xingyun.equipment.crane.modular.device.model.ProjectHelmet">
        <id column="id" property="id" />
        <result column="imei" property="imei" />
        <result column="name" property="name" />
        <result column="is_online" property="isOnline" />
        <result column="status" property="status" />
        <result column="comments" property="comments" />
        <result column="is_del" property="isDel" />
        <result column="create_time" property="createTime" />
        <result column="create_user" property="createUser" />
        <result column="modify_time" property="modifyTime" />
        <result column="modify_user" property="modifyUser" />
        <result column="project_id" property="projectId" />
        <result column="id_card_type" property="idCardType" />
        <result column="id_card_number" property="idCardNumber" />
        <result column="projectName" property="projectName" />
    </resultMap>


    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, imei, name, is_online AS isOnline, status, comments, is_del AS isDel, create_time AS createTime, create_user AS createUser, modify_time AS modifyTime, modify_user AS modifyUser,  project_id AS projectId, id_card_type AS idCardType, id_card_number AS idCardNumber
    </sql>

    <!-- 通用查询结果列(带别名)-->
    <sql id="Column_List">
        ${alias}.id,
        ${alias}.imei,
        ${alias}.name,
        ${alias}.is_online,
        ${alias}.status,
        ${alias}.comments,
        ${alias}.is_del,
        ${alias}.create_time,
        ${alias}.create_user,
        ${alias}.modify_time,
        ${alias}.modify_user,
        ${alias}.project_id,
        ${alias}.id_card_type,
        ${alias}.id_card_number,
    </sql>

    <select id="selectPageList" resultMap="BaseResultMap">
        select
        <include refid="Column_List">
            <property name="alias" value="a"/>
        </include>
        b.name as projectName,
        c.name as createUserName
        from t_project_helmet a
        left join t_project_info b on b.id = a.project_id and b.is_del = 0
        left join t_sys_user c on c.id = a.create_user and  c.is_del=0
        <where>
            ${ew.sqlSegment}
        </where>
        order by a.create_time desc
    </select>

    <update id="updateStatusByIds">
          update  t_project_helmet  set status=#{type}
          where  is_del=0 and  id in(
          <foreach collection="ids" open="" close="" separator="," item="item" index="index">
            #{item}
          </foreach>
          )
    </update>


    <update id="updateCurrentFlagAndStatusByIds">
        update  t_project_helmet  set status=0,current_flag=1
        where  is_del=0 and  id in(
        <foreach collection="ids" open="" close="" separator="," item="item" index="index">
            #{item}
        </foreach>
        )
    </update>



</mapper>
